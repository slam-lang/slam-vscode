{
  "scopeName": "source.slam",
  "patterns": [{ "include": "#control" }, { "include": "#ident" }, { "include": "#paren" }, { "include": "#comm" }, { "include": "#string" },{ "include": "#sstring" },  { "include": "#char" }, { "include": "#num" }],
  "repository": {
    "control": {
      "match": "\\b(nop|swap|dump|copy|covr|readc|read|putc|put|disc|argv|argc|envp|const|ret|quit|if|proc|do|end|inc|enum|var|gvar|prop|class|cproc|lnk)\\b",
      "name": "keyword"
    },
    "ident": {
      "match": "\\b(asm|of|oper|\\-|\\*|\\,|\\/\\%|\\+|\\^|!|!=|==|\\<|\\>|&&|\\|\\||\\(\\)|sys0|sys1|sys2|sys3|sys4|sys5|sys6)\\b",
      "name": "entity.name.function"
    },
    "paren": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close" }
      },
      "name": "support.function"
    },
    "comm": {
      "begin": "{",
      "end": "}",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close" }
      },
      "name": "comment.block"
    },
    "string": {
      "begin": "\"",
      "end": "\"[\n ]",
      "name": "string"
    },
    "sstring": {
      "begin": "`",
      "end": "`[\n ]",
      "name": "string"
    },
    "char": {
      "match": "'.'",
      "name": "constant"
    },
    "num": {
      "match": "[0-9]+[hbo]?",
      "name": "constant.numeric"
    }
  }
}